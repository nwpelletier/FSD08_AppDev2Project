@page "{currentPage:int?}/{selectedCompanyId:int?}"
@using System.Globalization
@model FSD08_AppDev2Project.Pages.JobPostingsModel
@{
    ViewData["Title"] = "Job Postings";
}

<h1>@ViewData["Title"]</h1>
@if (TempData.ContainsKey("JobMessage"))
{
    <div id="jobmessageContainer" class="jobmessage-container text-center">
        <div class="jobmessage">
            @TempData["JobMessage"]
        </div>
    </div>
}


@* Search Starts *@
<div class="row">
    <div class="col-md-2"></div>
    <div class="col-md-4">
        <form method="post" asp-page-handler="FindByCompany">
            <div class="input-group mb-3">
                <button class="btn btn-outline-secondary" type="submit">Show Jobs by Company</button>

                <select id="companyDropdown" asp-for="SelectedCompanyId" class="form-select"
                    asp-items="new SelectList(Model.Companys, nameof(FSD08_AppDev2Project.Models.Company.Id), nameof(FSD08_AppDev2Project.Models.Company.Name))">
                    <option value="">Select Company</option>
                </select>
            </div>
        </form>
    </div>

    @* Search Ends *@
    <div class="col-md-6">
        <div class="text-center">
            <nav aria-label="Job navigation">
                <ul class="pagination justify-content-center">
                    @for (var i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            @{
                                var routeValues = new Dictionary<string, string>
                        {
                        { "CurrentPage", i.ToString() }
                        };

                                if (Model.SelectedCompanyId != null)
                                {
                                    routeValues.Add("SelectedCompanyId", Model.SelectedCompanyId.ToString());
                                } else {
                                    routeValues.Add("SelectedCompanyId", "");
                                }
                            }
                            <a class="page-link" asp-page="JobPostings" asp-all-route-data="routeValues">@i</a>
                        </li>

                    }
                </ul>
            </nav>
        </div>
    </div>
</div>

<div class="container">


    <div class="row">
        <div class="col-md-6">
            <ul>
                @foreach (var job in Model.Jobs)
                {
                    <div class="card text-dark bg-light mb-3 customborder" style="max-width: 30rem;"
                        onclick="showJobDetails(@job.Id)">
                        <div class="card-header">@job.JobTitle</div>
                        <div class="card-body">
                            <h5 class="card-title">@job.JobCategory</h5>
                        </div>

                        @* added date formatting *@
                        <div class="card-footer bg-transparent border-light">
                            Start Date: @(job.StartDate.ToString("yyyy-MM-dd"))
                        </div>
                    </div>

                }
            </ul>
        </div>

        <div class="col-md-6" id="detailsContainer" style="display: none;">
            <div class="card text-dark bg-light mb-3 customborder" style="max-width: 45rem;max-height:50rem;">
                <form method="post" id="applyNowForm" asp-page-handler="HandleJobId">
                    <input type="hidden" id="selectedJobId" name="selectedJobId" value="" />
                    <div class="card-header"></div>
                    <br>
                    <div class="text-center">

                        <div class="text-center">
                            <button type="submit" id="btnApply" class="btn btn-primary" style="margin-left: 40%;" ></button>
                        </div>
                    </div>
                    <hr>
                    <div class="card-body" style="max-height:35rem;overflow-y: auto;">
                        <h5 class="card-title"></h5>
                        <p class="card-text"></p>
                    </div>
                    <div class="card-footer bg-transparent border-light"></div>
                </form>
            </div>
        </div>

    </div>
</div>




<script>
    function showJobDetails(jobId) {
        // find job by id
        var isAuthenticated = @Html.Raw(Json.Serialize(Model.IsAuthenticated));//@User.Identity.IsAuthenticated;
        var jobs = @Html.Raw(Json.Serialize(Model.Jobs));
        var clickedJob = jobs.find(job => job.id === parseInt(jobId));

        if (clickedJob) {
            // find if job is already applied
            // set button visibility and text
            var btnApply = document.getElementById('btnApply');
            btnApply.style.display = isAuthenticated ? 'block' : 'none';

            if (isAuthenticated) {
                var appliedJobs = @Html.Raw(Json.Serialize(Model.AppliedJobs));
                var alreadyAppliedJob;
                if (isAuthenticated) {
                    alreadyAppliedJob = appliedJobs.find(ajob => ajob.job.id === parseInt(jobId));
                } else {
                    alreadyAppliedJob = null;
                }
                if (alreadyAppliedJob) {
                    btnApply.innerText = 'Already applied';
                    btnApply.disabled = true;
                    btnApply.className = "btn btn-secondary";
                } else {
                    btnApply.innerText = 'Apply now';
                    btnApply.disabled = false;
                    btnApply.className = "btn btn-primary";
                }
            }


            // update job details container
            var detailsContainer = document.getElementById('detailsContainer');
            detailsContainer.querySelector('.card-header').innerText = clickedJob.jobTitle;
            detailsContainer.querySelector('.card-title').innerText = clickedJob.jobCategory;
            detailsContainer.querySelector('.card-text').innerHTML = clickedJob.jobDescription;

            // added date formatting
            var startDate = typeof clickedJob.startDate === 'string' ?
                new Date(clickedJob.startDate) : clickedJob.startDate;
            detailsContainer.querySelector('.card-footer').innerText = 'Start Date: ' +
                (startDate instanceof Date ? startDate.toISOString().split('T')[0] : 'Invalid Date');

            // set id to use in backend
            document.getElementById('selectedJobId').value = clickedJob.id;

            // make div visible
            detailsContainer.style.display = 'block';
        }
    }

    //hide message after few seconds
    document.addEventListener('DOMContentLoaded', function () {
        setTimeout(function () {
            var messageContainer = document.getElementById('jobmessageContainer');
            if (messageContainer) {
                messageContainer.style.display = 'none';
            }
        }, 2500);
    });

</script>
