@page
@model FSD08_AppDev2Project.Pages.JobPostingsModel
@{
    ViewData["Title"] = "Job Postings";
}

<h1>@ViewData["Title"]</h1>
@if (TempData.ContainsKey("JobMessage"))
{
    <div id="jobmessageContainer" class="jobmessage-container text-center">
        <div class="jobmessage">
            @TempData["JobMessage"]
        </div>
    </div>
}

<div class="container">
    <div class="row">
        <div class="col-md-6">
            <ul>
                @foreach (var job in Model.Jobs)
                {
                    <div class="card text-dark bg-light mb-3 customborder" style="max-width: 30rem;"
                        onclick="showJobDetails(@job.Id)">
                        <div class="card-header">@job.JobTitle</div>
                        <div class="card-body">
                            <h5 class="card-title">@job.JobCategory</h5>
                        </div>
                        <div class="card-footer bg-transparent border-light">Posted on: @job.StartDate</div>
                    </div>

                }
            </ul>
        </div>

        <div class="col-md-6" id="detailsContainer" style="display: none;">
            <div class="card text-dark bg-light mb-3 customborder" style="max-width: 45rem;max-height:50rem;">
                <form method="post" id="applyNowForm" asp-page-handler="HandleJobId">
                    <input type="hidden" id="selectedJobId" name="selectedJobId" value="" />
                    <div class="card-header"></div>
                    <br>
                    <div class="text-center">

                        <div class="text-center">
                            <button type="submit" id="btnApply" class="btn btn-primary"></button>
                        </div>
                    </div>
                    <hr>
                    <div class="card-body" style="max-height:35rem;overflow-y: auto;">
                        <h5 class="card-title"></h5>
                        <p class="card-text"></p>
                    </div>
                    <div class="card-footer bg-transparent border-light"></div>
                </form>
            </div>
        </div>

    </div>
</div>


<script>
    function showJobDetails(jobId) {
        //find by id
        //debugger;
        var jobs = @Html.Raw(Json.Serialize(Model.Jobs));
        var clickedJob = jobs.find(job => job.id === jobId);

        var appliedJobs = @Html.Raw(Json.Serialize(Model.AppliedJobs));

        var alredyAppliedJob = appliedJobs.find(ajob => ajob.job.id === jobId);

        if (clickedJob) {
            document.getElementById('detailsContainer').querySelector('.card-header').innerText = clickedJob.jobTitle;
            document.getElementById('detailsContainer').querySelector('.card-title').innerText = clickedJob.jobCategory;
            document.getElementById('detailsContainer').querySelector('.card-text').innerHTML = clickedJob.jobDescription;
            document.getElementById('detailsContainer').querySelector('.card-footer').innerText = 'Posted on: ' + clickedJob.startDate;

            //set id to use in backend
            document.getElementById('selectedJobId').value = clickedJob.id;
            //make div visible
            document.getElementById('detailsContainer').style.display = 'block';

            //set button visibility and text
            if (alredyAppliedJob) {
                document.getElementById('btnApply').innerText = 'Already applied';
                document.getElementById('btnApply').disabled = true;
                document.getElementById('btnApply').className = "btn btn-secondary";
            } else {
                document.getElementById('btnApply').innerText = 'Apply now';
                document.getElementById('btnApply').disabled = false;
                document.getElementById('btnApply').className = "btn btn-primary";
            }
        }
    }

    //hide message after few seconds
    document.addEventListener('DOMContentLoaded', function () {
        setTimeout(function () {
            var messageContainer = document.getElementById('jobmessageContainer');
            if (messageContainer) {
                messageContainer.style.display = 'none';
            }
        }, 2500);
    });


    var isAuthenticated = @User.Identity.IsAuthenticated;
    var btnApply = document.getElementById('btnApply');
    btnApply.style.display = isAuthenticated ? 'block' : 'none';

    if (isAuthenticated) {
        var appliedJobs = @Html.Raw(Json.Serialize(Model.AppliedJobs));
        var alreadyAppliedJob = appliedJobs.find(ajob => ajob.job.id === jobId);

        if (alreadyAppliedJob) {
            btnApply.innerText = 'Already applied';
            btnApply.disabled = true;
            btnApply.className = "btn btn-secondary";
        } else {
            btnApply.innerText = 'Apply now';
            btnApply.disabled = false;
            btnApply.className = "btn btn-primary";
        }
    }
</script>
